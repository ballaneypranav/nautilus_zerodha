TITLE: Querying Trade Tick Data with DataFusion
DESCRIPTION: This code constructs an SQL query to select all columns from the `trade_0` table (registered trade tick data) and orders the results by the `ts_init` column. The query is then executed using the DataFusion session context, returning a DataFrame.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,SQL,data catalog,data format,data type:tick,query,reporting & analysis,tech:database,technology
CODE:
```
query = "SELECT * FROM trade_0 ORDER BY ts_init"
df = ctx.sql(query)
```
----------------------------------------
TITLE: Registering Parquet Files with DataFusion
DESCRIPTION: This snippet registers the previously defined Parquet file paths (`trade_tick_path` and `bar_path`) as virtual tables named `trade_0` and `bar_0` within the DataFusion session context. This allows them to be queried using SQL statements.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,SQL,data catalog,data format,register_parquet,reporting & analysis
CODE:
```
# Run this cell once (otherwise will error)
ctx.register_parquet("trade_0", trade_tick_path)
ctx.register_parquet("bar_0", bar_path)
```
----------------------------------------
TITLE: Inspecting PyArrow Table Schema (Trade Tick)
DESCRIPTION: This line accesses and displays the schema of the PyArrow Table (`table`) loaded from the trade tick data. It provides detailed metadata about the columns, including their names, types, and any nested structures.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: Parquet,PyArrow,data format,data type:tick,inspection,schema
CODE:
```
table.schema
```
----------------------------------------
TITLE: Inspecting DataFusion DataFrame Schema (Bar Data)
DESCRIPTION: This line displays the schema of the DataFusion DataFrame (`df`) obtained from the bar data query. It provides information about the column names and their respective data types for the bar dataset.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,bar,data format,inspection,schema
CODE:
```
df.schema()
```
----------------------------------------
TITLE: Querying Bar Data with DataFusion
DESCRIPTION: Similar to the trade tick data, this code constructs and executes an SQL query to select all columns from the `bar_0` table (registered bar data), ordered by `ts_init`. The result is stored in a DataFusion DataFrame.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,SQL,bar,data format,query,reporting & analysis
CODE:
```
query = "SELECT * FROM bar_0 ORDER BY ts_init"
df = ctx.sql(query)
```
----------------------------------------
TITLE: Reading and Inspecting Bar Parquet with PyArrow
DESCRIPTION: This snippet first uses `pyarrow.parquet.read_table` to directly load the `bars.parquet` file into a PyArrow Table object. Subsequently, it accesses and displays the schema of this loaded table, providing metadata about the bar data columns.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: Parquet,PyArrow,bar,data format,inspection,read_table,schema
CODE:
```
table = pq.read_table(bar_path)
table.schema
```
----------------------------------------
TITLE: Reading Trade Tick Parquet with PyArrow
DESCRIPTION: This snippet uses `pyarrow.parquet.read_table` to directly load the `trades.parquet` file into a PyArrow Table object. This provides a direct, in-memory representation of the Parquet data, bypassing the DataFusion query engine.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: Parquet,PyArrow,data format,data type:tick,read_table
CODE:
```
table = pq.read_table(trade_tick_path)
```
----------------------------------------
TITLE: Importing DataFusion and PyArrow
DESCRIPTION: This snippet imports the `datafusion` library for SQL query capabilities and `pyarrow.parquet` for direct Parquet file reading and schema inspection. These are the primary libraries used for interacting with Parquet data in this tutorial.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,PyArrow,data format,dev:imports,development,persistence
CODE:
```
import datafusion
import pyarrow.parquet as pq
```
----------------------------------------
TITLE: Creating DataFusion Session Context
DESCRIPTION: This line initializes a `SessionContext` object from the `datafusion` library. The session context serves as the entry point for executing SQL queries and managing data sources within DataFusion.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,SQL,SessionContext,initialization,tech:database,technology
CODE:
```
ctx = datafusion.SessionContext()
```
----------------------------------------
TITLE: Displaying DataFusion DataFrame (Trade Tick)
DESCRIPTION: This line implicitly displays the contents of the DataFusion DataFrame (`df`) for the trade tick data. In an interactive environment like a Jupyter notebook, this would typically show a preview of the data.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,data format,data type:tick,display,inspection
CODE:
```
df
```
----------------------------------------
TITLE: Displaying DataFusion DataFrame (Bar Data)
DESCRIPTION: This line implicitly displays the contents of the DataFusion DataFrame (`df`) for the bar data. In an interactive environment, this would typically show a preview of the bar data.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,bar,data format,display,inspection
CODE:
```
df
```
----------------------------------------
TITLE: Installing DataFusion
DESCRIPTION: This command installs the `datafusion` library using pip, which is a prerequisite for performing SQL-like queries on Parquet files. It ensures that the necessary dependencies are available in the Python environment.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: bash
KEYWORDS: DataFusion,Parquet,data format,dev:installation,development,persistence
CODE:
```
pip install datafusion
```
----------------------------------------
TITLE: Inspecting DataFusion DataFrame Schema (Trade Tick)
DESCRIPTION: This line displays the schema of the DataFusion DataFrame (`df`) obtained from the trade tick data query. It provides information about the column names and their respective data types.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: DataFusion,Parquet,data format,data type:tick,inspection,schema
CODE:
```
df.schema()
```
----------------------------------------
TITLE: Defining Parquet File Paths
DESCRIPTION: This code defines the file paths for the `trades.parquet` (trade tick data) and `bars.parquet` (bar data) files. These paths are used to locate and register the Parquet datasets for querying and reading operations.
SOURCE: docs/tutorials/parquet_explorer.ipynb
LANGUAGE: python
KEYWORDS: Parquet,configuration,data format,file path
CODE:
```
trade_tick_path = "../../tests/test_data/nautilus/trades.parquet"
bar_path = "../../tests/test_data/nautilus/bars.parquet"
```